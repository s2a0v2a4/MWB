// TypeScript
import { Test, TestingModule } from '@nestjs/testing';
import { InterestsController } from './interests.controller';
import { BadRequestException } from '@nestjs/common';

describe('InterestsController', () => {
  let controller: InterestsController;

  beforeEach(async () => {
    const module: TestingModule = await Test.createTestingModule({
      controllers: [InterestsController],
    }).compile();

    controller = module.get<InterestsController>(InterestsController);
  });

  it('should be defined', () => {
    expect(controller).toBeDefined();
  });

  it('should return empty interests initially', () => {
    const result = controller.getInterests();
    expect(result).toEqual({ interests: [], count: 0 });
  });

  it('should save interests successfully', () => {
    const body = { interests: [1, 2, 3] };
    const result = controller.saveInterests(body);
    expect(result).toEqual({
      success: true,
      savedInterests: [1, 2, 3],
      message: 'Interests saved successfully',
    });
  });

  it('should throw BadRequestException for invalid interests', () => {
    const body = { interests: 'invalid' as any };
    expect(() => controller.saveInterests(body)).toThrow(BadRequestException);
  });
});